plugins {
    id 'com.github.johnrengelman.shadow'
}

architectury {
    platformSetupLoomIde()
    forge()
}

loom {
    forge {
        mixinConfigs = [
            "minopp.mixins.json",
            "minopp.forge.mixins.json"
        ]
    }
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common

    // Files in this configuration will be bundled into your mod using the Shadow plugin.
    // Don't use the `shadow` configuration from the plugin itself as it's meant for excluding files.
    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

repositories {
    maven {
        name = "Forge"
        url = "https://maven.minecraftforge.net/"
    }
    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
    }
    maven {
        name = 'Xander Maven'
        url = "https://maven.isxander.dev/releases"
    }
    flatDir {
        dir "libs"
    }
}

dependencies {
    forge "net.minecraftforge:forge:$rootProject.forge_version"
    modImplementation "libs:touhoulittlemaid:1.20.1-release-1.1.14"
//    modImplementation ("org.teacon:SignMeUp-NeoForge-1.21.1:+") { transitive false }

//    modImplementation "dev.architectury:architectury-neoforge:$rootProject.architectury_api_version"

    common(project(path: ':common', configuration: 'namedElements')) { transitive false }
    shadowBundle(project(path: ':common', configuration: 'transformProductionForge')) { transitive false }

    forgeRuntimeLibrary "org.quiltmc.parsers:gson:0.3.1"

    modImplementation ("dev.isxander:yet-another-config-lib:$rootProject.yacl_version-forge") { transitive false }
}

processResources {
    inputs.property 'version', project.version

    filesMatching('META-INF/mods.toml') {
        expand version: project.version
    }
}

shadowJar {
    exclude "fabric.mod.json"
    exclude "architectury.common.json"

    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    input.set shadowJar.archiveFile
}
